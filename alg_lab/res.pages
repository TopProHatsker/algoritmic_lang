#ifndef RES_PAGES
#define RES_PAGES

#include <string>
#include <vector>

enum menu_id {
    NONE,
    START,

    M_PRINT,
    M_SAVE,
    M_IMPORT,

    M_ADD_PIPE,
    M_ADD_CS,

    M_EDIT_PIPE,
    M_EDIT_CS,

    M_FILTER_FIND,

    M_DELETE_PIPE,
    M_DELETE_CS
};

struct Button {
    std::string data;
    menu_id next;
};

struct Page {
    menu_id id;
    std::string title;
    std::vector<Button> btn;
};

struct Book {
    std::vector<Page> pages;
};

static const Book book = {
    .pages = {
        Page{
            .id = START,
            .title = " Karchenko L1 ",
            .btn = {
                Button {
                    .data = "Exit",
                    .next = NONE
                },
                Button {
                    .data = "Print",
                    .next = M_PRINT
                },
                Button {
                    .data = "Fiter find",
                    .next = M_FILTER_FIND
                },
                Button {
                    .data = "Save",
                    .next = M_SAVE
                },
                Button {
                    .data = "Import",
                    .next = M_IMPORT
                },
                Button {
                    .data = "Add Pipe",
                    .next = M_ADD_PIPE
                },
                Button {
                    .data = "Add Station",
                    .next = M_ADD_CS
                },
                Button {
                    .data = "Edit Pipe",
                    .next = M_EDIT_PIPE
                },
                Button {
                    .data = "Edit Station",
                    .next = M_EDIT_CS
                },
                Button {
                    .data = "Delete Pipe",
                    .next = M_DELETE_PIPE
                },
                Button {
                    .data = "Delete Station",
                    .next = M_DELETE_CS
                }
            }
        }
    }
};

#endif // RES_PAGES
